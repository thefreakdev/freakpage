:root {
	 --card-width: 260px;
	 --card-height: 260px;
	 --card-transition-duration: 800ms;
	 --card-transition-easing: ease;
}
 * {
	 box-sizing: border-box;
	 margin: 0;
	 padding: 0;
}

 button {
	 border: none;
	 background: none;
	 cursor: pointer;
}
 button:focus {
	 outline: none;
	 border: none;
}
.app{
	height:80vh;
}
 .app__bg {
	 
	 width: 100%;
	 height: 100%;
	 z-index: -5;
	 filter: blur(8px);
	 pointer-events: none;
	 user-select: none;
	 overflow: hidden;
}
 .app__bg::before {
	 content: "";
	 position: absolute;
	 left: 0;
	 top: 0;
	 width: 100%;
	 height: 100%;
	 background: #ffffff;
	 z-index: 1;
	 opacity: 0.8;
}
 .app__bg__image {
	 position: absolute;
	 left: 50%;
	 top: 50%;
	 transform: translate(-50%, -50%) translateX(var(--image-translate-offset, 0));
	 width: 180%;
	 height: 180%;
	 transition: transform 1000ms ease, opacity 1000ms ease;
	 overflow: hidden;
}
 .app__bg__image img {
	 width: 100%;
	 height: 100%;
	 object-fit: cover;
}
 .app__bg__image.current--image {
	 opacity: 1;
	 --image-translate-offset: 0;
}
 .app__bg__image.previous--image, .app__bg__image.next--image {
	 opacity: 0;
}
 .app__bg__image.previous--image {
	 --image-translate-offset: -25%;
}
 .app__bg__image.next--image {
	 --image-translate-offset: 25%;
}
 .cardList {
	 width: calc(3 * var(--card-width));
}
 .cardList__btn {
	 
	 width: 800px;
	 height: 35px;
	 position: absolute;
	 transform: translateY(-50%);
	 z-index: 100;
}
 .cardList__btn.btn--left {
	 left: -5%;
}
 .cardList__btn.btn--right {
	 right: -5%;
}
 .cardList__btn .icon {
	 width: 100%;
	 height: 100%;
}
 .cardList__btn .icon svg {
	 width: 100%;
	 height: 100%;
}
 .cardList .cards__wrapper {
	 position: relative;
	 width: 100%;
	 height: 100%;
	 perspective: 1000px;
}
 .card {
	 --card-translateY-offset: 0%;
	 position: absolute;
	 left: 50%;
	 top: 50%;
	 transform: translate(-50%, -50%) translateX(var(--card-translateX-offset)) translateY(var(--card-translateY-offset)) rotateY(var(--card-rotation-offset)) scale(var(--card-scale-offset));
	 display: inline-block;
	 width: var(--card-width);
	 height: var(--card-height);
	 transition: transform var(--card-transition-duration) var(--card-transition-easing);
	 user-select: none;
}
 .card::before {
	 content: "";
	 position: absolute;
	 left: 0;
	 top: 0;
	 width: 100%;
	 height: 100%;
	 background: #000;
	 z-index: 1;
	 transition: opacity var(--card-transition-duration) var(--card-transition-easing);
	 opacity: calc(1 - var(--opacity));
}
 .card__image {
	 position: relative;
	 width: 100%;
	 height: 100%;
}
 .card__image img {
	 position: absolute;
	 left: 0;
	 top: 0;
	 width: 100%;
	 height: 100%;
	 object-fit: cover;
}
 .card.current--card {
	 --current-card-rotation-offset: 0;
	 --card-translateX-offset: 0;
	 --card-rotation-offset: var(--current-card-rotation-offset);
	 --card-scale-offset: 1.2;
	 --opacity: 1;
}
 .card.previous--card {
	 --card-translateX-offset: calc(-1 * var(--card-width) * 1.1);
	 --card-rotation-offset: 25deg;
}
 .card.next--card {
	 --card-translateX-offset: calc(var(--card-width) * 1.1);
	 --card-rotation-offset: -25deg;
}
 .card.previous--card, .card.next--card {
	 --card-scale-offset: 0.9;
	 --opacity: 0.4;
}
 .infoList {
	 position: absolute;
	 width: calc(3 * var(--card-width));
	 height: var(--card-height);
	 pointer-events: none;
}
 .infoList .info__wrapper {
	 position: relative;
	 width: 100%;
	 height: 100%;
	 display: flex;
	 justify-content: flex-start;
	 align-items: flex-end;
	 perspective: 1000px;
	 transform-style: preserve-3d;
}
 .info {
	 margin-bottom: calc(var(--card-height) / 8);
	 margin-left: calc(var(--card-width) / 1.5);
	 transform: translateZ(2rem);
	 transition: transform var(--card-transition-duration) var(--card-transition-easing);
}
 .info .text {
	 position: relative;
	 width: fit-content;
}
 .info .name, .info .location {
	 text-transform: uppercase;
}
 .info .location {
	 font-weight: 800;
}
 .info .location {
	 --mg-left: 40px;
	 --text-size-offset: 0.12;
	 font-weight: 600;
	 margin-left: var(--mg-left);
	 margin-bottom: calc(var(--mg-left) / 2);
	 padding-bottom: 0.8rem;
}
 .info .location::before, .info .location::after {
	 content: "";
	 position: absolute;
	 background: #fff;
	 left: 0%;
	 transform: translate(calc(-1 * var(--mg-left)), -50%);
}
 .info .location::before {
	 top: 50%;
	 width: 20px;
	 height: 5px;
}
 .info .location::after {
	 bottom: 0;
	 width: 60px;
	 height: 2px;
}
 .info .description {
	 --text-size-offset: 0.065;
	 
}
 .info.current--info {
	
	display: block;

}
 .info.previous--info, .info.next--info {
	 opacity: 0;
	 display: none;
}
 

@media only screen and (min-width: 995px) {
	:root {
		--card-width: 496px;
		--card-height: 280px;
   }
}


 @media only screen and (min-width: 1160px) {
	 :root {
		 --card-width: 496px;
		 --card-height: 280px;
	}
}

@keyframes fade-in-slow {
	from {
	  opacity: 0;
	  transform: translateY(10px);
	}
	to {
	  opacity: 1;
	  transform: translateY(0);
	}
  }
  
  .animate-fade-in-slow {
	animation-name: fade-in-slow;
	animation-duration: 2s;
	animation-fill-mode: forwards;
  }

  
 @keyframes float {
  0% {
    transform: translate(0, 0);
  }
  50% {
    transform: translate(0, -10px);
  }
  100% {
    transform: translate(0, 0);
  }
}

/* Define the floating animation */
@keyframes float {
	0% {
	  transform: translate(0, 0);
	}
	50% {
	  transform: translate(0, -10px);
	}
	100% {
	  transform: translate(0, 0);
	}
  }
  
  /* Apply the floating animation to the .animate-float class */
  .animate-float {
	animation-name: float;
	animation-duration: 4.2s;
	animation-iteration-count: infinite;
	animation-timing-function: ease-in-out;
  }
  
  